[platformio]

default_envs = RTOS_SDK_AP_Scan

[env]
platform = espressif8266
board = esp12e
upload_resetmethod = nodemcu
monitor_speed = 74880   ; Using the default speed of the ESP8266 so that bootup messages are readable.

[common]
build_flags =
        -I include/Universal

[env:Arduino]
framework = arduino
build_src_filter = -<*> +<esp8266-Arduino>
build_flags =
	${common.build_flags}
        -D Device_Name="Arduino_blink"
        -I include/esp8266-arduino


[env:nonOS_SDK]
framework = esp8266-nonos-sdk
build_src_filter = -<*> +<esp8266-nonOS-sdk>
build_flags =
	${common.build_flags}
        -D Device_Name="noOS_SDK_blink"
        -I include/ESP_nonOS
        -I include/esp8266-nonos-sdk


[env:RTOS_SDK_blink]
framework = esp8266-rtos-sdk
build_src_filter = -<*> +<esp8266-RTOS-sdk-blink>

build_flags =
	${common.build_flags}
        -D Device_Name="RTOS_SDK_blink"
        -I include/ESP_RTOS
        -I include/esp8266-rtos-sdk-blink
        -D DEBUG

; further RTOS sample code:
;   https://github.com/espressif/esp8266-rtos-sample-code/tree/master

[env:RTOS_SDK_WiFi_Sniffer]
framework = esp8266-rtos-sdk
build_src_filter = -<*> +<esp8266-RTOS-sdk-WiFi-Sniffer>

build_flags =
	${common.build_flags}
        -D Device_Name="RTOS_SDK_WiFi_Sniffer"
        -I include/ESP_RTOS
        -I include/esp8266-RTOS-sdk-WiFi-Sniffer
        ; -D DEBUG

[env:RTOS_SDK_AP_Scan]
framework = esp8266-rtos-sdk
build_src_filter = -<*> +<esp8266-RTOS-sdk-AP-Scan>

build_flags =
	${common.build_flags}
        -D Device_Name="RTOS_SDK_AP_Scan"
        -I include/ESP_RTOS
        -I include/esp8266-RTOS-sdk-AP-Scan
        ; -D DEBUG
